name: Build for macos platform

on:
  push:
    branches:
      - 'main'
      - 'master'
  pull_request:
    branches:
      - 'main'
      - 'master'

# https://stackoverflow.com/a/72408109/6942800
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build boringNotch
    runs-on: macos-latest
    outputs:
      tag_name: ${{ steps.tag.outputs.tag_name }}
    steps:
    - name: Code Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          ~/.build
          Build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Generate Tag
      id: tag
      if: github.event_name == 'push'
      run: |
        current_date=$(date +'%Y%m%d')
        build_number=$(git rev-list --count HEAD)
        tag_name="v${current_date}.${build_number}"
        echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
        git tag $tag_name
        git push origin $tag_name
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Switch xcode to latest-stable
      uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: latest-stable
    
    - name: Resolve Swift dependencies
      run: xcodebuild -resolvePackageDependencies -quiet
      
    - name: Build
      run: |
        xcodebuild -scheme boringNotch \
          -configuration Release \
          CODE_SIGN_IDENTITY="-" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          OTHER_CODE_SIGN_FLAGS="--options=runtime" \
          -archivePath ./build/boringNotch.xcarchive \
          -parallel-testing-enabled YES \
          -quiet \
          archive

    - name: Prepare App for Distribution
      run: |
        # Create basic entitlements
        cat > entitlements.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
          <true/>
          <key>com.apple.security.cs.disable-library-validation</key>
          <true/>
          <key>com.apple.security.personal-information.calendars</key>
          <true/>
        </dict>
        </plist>
        EOF
        
        # Remove quarantine attribute
        xattr -cr ./build/boringNotch.xcarchive/Products/Applications/boringNotch.app
        
        # Add hardened runtime and allow unsigned executable
        codesign --force --deep --sign - \
          --entitlements entitlements.plist \
          --options runtime \
          ./build/boringNotch.xcarchive/Products/Applications/boringNotch.app

    - name: Create DMG
      run: |
        # Create a temporary directory for mounting
        TEMP_DIR=$(mktemp -d)
        
        # Copy .app from archive to temp dir
        cp -r ./build/boringNotch.xcarchive/Products/Applications/boringNotch.app "$TEMP_DIR/"
        
        # Create DMG
        hdiutil create -volname "boringNotch" -srcfolder "$TEMP_DIR" -ov -format UDZO ./build/boringNotch.dmg
        
        # Cleanup
        rm -rf "$TEMP_DIR"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: boringNotch
        path: ./build/boringNotch.dmg
        retention-days: 1
        compression-level: 0  # Disable compression for faster upload

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: boringNotch
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          files: boringNotch.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}